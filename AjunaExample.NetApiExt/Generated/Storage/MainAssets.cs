//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi;
using Ajuna.NetApi.Model.Extrinsics;
using Ajuna.NetApi.Model.Meta;
using Ajuna.NetApi.Model.Types;
using Ajuna.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace AjunaExample.NetApiExt.Generated.Storage
{
    
    
    public sealed class AssetsStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public AssetsStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Assets", "Asset"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Ajuna.NetApi.Model.Types.Primitive.U32), typeof(AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.AssetDetails)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Assets", "Account"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>), typeof(AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.AssetAccount)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Assets", "Approvals"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>), typeof(AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.Approval)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Assets", "Metadata"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Ajuna.NetApi.Model.Types.Primitive.U32), typeof(AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.AssetMetadata)));
        }
        
        /// <summary>
        /// >> AssetParams
        ///  Details of an asset.
        /// </summary>
        public static string AssetParams(Ajuna.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Assets", "Asset", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> AssetDefault
        /// Default value as hex string
        /// </summary>
        public static string AssetDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Asset
        ///  Details of an asset.
        /// </summary>
        public async Task<AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.AssetDetails> Asset(Ajuna.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            string parameters = AssetsStorage.AssetParams(key);
            var result = await _client.GetStorageAsync<AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.AssetDetails>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> AccountParams
        ///  The holdings of a specific account for a specific asset.
        /// </summary>
        public static string AccountParams(Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("Assets", "Account", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> AccountDefault
        /// Default value as hex string
        /// </summary>
        public static string AccountDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Account
        ///  The holdings of a specific account for a specific asset.
        /// </summary>
        public async Task<AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.AssetAccount> Account(Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> key, CancellationToken token)
        {
            string parameters = AssetsStorage.AccountParams(key);
            var result = await _client.GetStorageAsync<AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.AssetAccount>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> ApprovalsParams
        ///  Approved balance transfers. First balance is the amount approved for transfer. Second
        ///  is the amount of `T::Currency` reserved for storing this.
        ///  First key is the asset ID, second key is the owner and third key is the delegate.
        /// </summary>
        public static string ApprovalsParams(Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("Assets", "Approvals", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> ApprovalsDefault
        /// Default value as hex string
        /// </summary>
        public static string ApprovalsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Approvals
        ///  Approved balance transfers. First balance is the amount approved for transfer. Second
        ///  is the amount of `T::Currency` reserved for storing this.
        ///  First key is the asset ID, second key is the owner and third key is the delegate.
        /// </summary>
        public async Task<AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.Approval> Approvals(Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> key, CancellationToken token)
        {
            string parameters = AssetsStorage.ApprovalsParams(key);
            var result = await _client.GetStorageAsync<AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.Approval>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> MetadataParams
        ///  Metadata of an asset.
        /// </summary>
        public static string MetadataParams(Ajuna.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Assets", "Metadata", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MetadataDefault
        /// Default value as hex string
        /// </summary>
        public static string MetadataDefault()
        {
            return "0x0000000000000000000000000000000000000000";
        }
        
        /// <summary>
        /// >> Metadata
        ///  Metadata of an asset.
        /// </summary>
        public async Task<AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.AssetMetadata> Metadata(Ajuna.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            string parameters = AssetsStorage.MetadataParams(key);
            var result = await _client.GetStorageAsync<AjunaExample.NetApiExt.Generated.Model.pallet_assets.types.AssetMetadata>(parameters, token);
            return result;
        }
    }
    
    public sealed class AssetsCalls
    {
        
        /// <summary>
        /// >> create
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Create(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress admin, Ajuna.NetApi.Model.Types.Primitive.U128 min_balance)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(admin.Encode());
            byteArray.AddRange(min_balance.Encode());
            return new Method(7, "Assets", 0, "create", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_create
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ForceCreate(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress owner, Ajuna.NetApi.Model.Types.Primitive.Bool is_sufficient, Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U128> min_balance)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(owner.Encode());
            byteArray.AddRange(is_sufficient.Encode());
            byteArray.AddRange(min_balance.Encode());
            return new Method(7, "Assets", 1, "force_create", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> start_destroy
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method StartDestroy(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            return new Method(7, "Assets", 2, "start_destroy", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> destroy_accounts
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method DestroyAccounts(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            return new Method(7, "Assets", 3, "destroy_accounts", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> destroy_approvals
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method DestroyApprovals(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            return new Method(7, "Assets", 4, "destroy_approvals", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> finish_destroy
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method FinishDestroy(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            return new Method(7, "Assets", 5, "finish_destroy", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> mint
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Mint(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress beneficiary, Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U128> amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(beneficiary.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(7, "Assets", 6, "mint", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> burn
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Burn(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress who, Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U128> amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(who.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(7, "Assets", 7, "burn", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> transfer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Transfer(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress target, Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U128> amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(target.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(7, "Assets", 8, "transfer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> transfer_keep_alive
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method TransferKeepAlive(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress target, Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U128> amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(target.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(7, "Assets", 9, "transfer_keep_alive", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_transfer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ForceTransfer(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress source, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress dest, Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U128> amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(source.Encode());
            byteArray.AddRange(dest.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(7, "Assets", 10, "force_transfer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> freeze
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Freeze(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress who)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(who.Encode());
            return new Method(7, "Assets", 11, "freeze", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> thaw
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Thaw(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress who)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(who.Encode());
            return new Method(7, "Assets", 12, "thaw", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> freeze_asset
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method FreezeAsset(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            return new Method(7, "Assets", 13, "freeze_asset", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> thaw_asset
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ThawAsset(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            return new Method(7, "Assets", 14, "thaw_asset", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> transfer_ownership
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method TransferOwnership(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress owner)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(owner.Encode());
            return new Method(7, "Assets", 15, "transfer_ownership", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_team
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetTeam(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress issuer, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress admin, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress freezer)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(issuer.Encode());
            byteArray.AddRange(admin.Encode());
            byteArray.AddRange(freezer.Encode());
            return new Method(7, "Assets", 16, "set_team", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_metadata
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetMetadata(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> name, Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> symbol, Ajuna.NetApi.Model.Types.Primitive.U8 decimals)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(name.Encode());
            byteArray.AddRange(symbol.Encode());
            byteArray.AddRange(decimals.Encode());
            return new Method(7, "Assets", 17, "set_metadata", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> clear_metadata
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ClearMetadata(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            return new Method(7, "Assets", 18, "clear_metadata", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_set_metadata
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ForceSetMetadata(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> name, Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> symbol, Ajuna.NetApi.Model.Types.Primitive.U8 decimals, Ajuna.NetApi.Model.Types.Primitive.Bool is_frozen)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(name.Encode());
            byteArray.AddRange(symbol.Encode());
            byteArray.AddRange(decimals.Encode());
            byteArray.AddRange(is_frozen.Encode());
            return new Method(7, "Assets", 19, "force_set_metadata", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_clear_metadata
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ForceClearMetadata(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            return new Method(7, "Assets", 20, "force_clear_metadata", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_asset_status
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ForceAssetStatus(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress owner, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress issuer, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress admin, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress freezer, Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U128> min_balance, Ajuna.NetApi.Model.Types.Primitive.Bool is_sufficient, Ajuna.NetApi.Model.Types.Primitive.Bool is_frozen)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(owner.Encode());
            byteArray.AddRange(issuer.Encode());
            byteArray.AddRange(admin.Encode());
            byteArray.AddRange(freezer.Encode());
            byteArray.AddRange(min_balance.Encode());
            byteArray.AddRange(is_sufficient.Encode());
            byteArray.AddRange(is_frozen.Encode());
            return new Method(7, "Assets", 21, "force_asset_status", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> approve_transfer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ApproveTransfer(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress @delegate, Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U128> amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(@delegate.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(7, "Assets", 22, "approve_transfer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> cancel_approval
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method CancelApproval(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress @delegate)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(@delegate.Encode());
            return new Method(7, "Assets", 23, "cancel_approval", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_cancel_approval
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ForceCancelApproval(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress owner, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress @delegate)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(owner.Encode());
            byteArray.AddRange(@delegate.Encode());
            return new Method(7, "Assets", 24, "force_cancel_approval", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> transfer_approved
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method TransferApproved(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress owner, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress destination, Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U128> amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(owner.Encode());
            byteArray.AddRange(destination.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(7, "Assets", 25, "transfer_approved", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> touch
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Touch(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            return new Method(7, "Assets", 26, "touch", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> refund
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Refund(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, Ajuna.NetApi.Model.Types.Primitive.Bool allow_burn)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(allow_burn.Encode());
            return new Method(7, "Assets", 27, "refund", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_min_balance
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetMinBalance(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, Ajuna.NetApi.Model.Types.Primitive.U128 min_balance)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(min_balance.Encode());
            return new Method(7, "Assets", 28, "set_min_balance", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> touch_other
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method TouchOther(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress who)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(who.Encode());
            return new Method(7, "Assets", 29, "touch_other", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> refund_other
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RefundOther(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress who)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(who.Encode());
            return new Method(7, "Assets", 30, "refund_other", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> block
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Block(Ajuna.NetApi.Model.Types.Base.BaseCom<Ajuna.NetApi.Model.Types.Primitive.U32> id, AjunaExample.NetApiExt.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress who)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(id.Encode());
            byteArray.AddRange(who.Encode());
            return new Method(7, "Assets", 31, "block", byteArray.ToArray());
        }
    }
    
    public sealed class AssetsConstants
    {
        
        /// <summary>
        /// >> RemoveItemsLimit
        ///  Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.
        /// 
        ///  Must be configured to result in a weight that makes each call fit in a block.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U32 RemoveItemsLimit()
        {
            var result = new Ajuna.NetApi.Model.Types.Primitive.U32();
            result.Create("0xE8030000");
            return result;
        }
        
        /// <summary>
        /// >> AssetDeposit
        ///  The basic amount of funds that must be reserved for an asset.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U128 AssetDeposit()
        {
            var result = new Ajuna.NetApi.Model.Types.Primitive.U128();
            result.Create("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF");
            return result;
        }
        
        /// <summary>
        /// >> AssetAccountDeposit
        ///  The amount of funds that must be reserved for a non-provider asset account to be
        ///  maintained.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U128 AssetAccountDeposit()
        {
            var result = new Ajuna.NetApi.Model.Types.Primitive.U128();
            result.Create("0x0080C6A47E8D03000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> MetadataDepositBase
        ///  The basic amount of funds that must be reserved when adding metadata to your asset.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U128 MetadataDepositBase()
        {
            var result = new Ajuna.NetApi.Model.Types.Primitive.U128();
            result.Create("0x00000000000000000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> MetadataDepositPerByte
        ///  The additional funds that must be reserved for the number of bytes you store in your
        ///  metadata.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U128 MetadataDepositPerByte()
        {
            var result = new Ajuna.NetApi.Model.Types.Primitive.U128();
            result.Create("0x00000000000000000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> ApprovalDeposit
        ///  The amount of funds that must be reserved when creating a new approval.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U128 ApprovalDeposit()
        {
            var result = new Ajuna.NetApi.Model.Types.Primitive.U128();
            result.Create("0x0080C6A47E8D03000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> StringLimit
        ///  The maximum length of a name or symbol stored on-chain.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U32 StringLimit()
        {
            var result = new Ajuna.NetApi.Model.Types.Primitive.U32();
            result.Create("0x14000000");
            return result;
        }
    }
    
    public enum AssetsErrors
    {
        
        /// <summary>
        /// >> BalanceLow
        /// Account balance must be greater than or equal to the transfer amount.
        /// </summary>
        BalanceLow,
        
        /// <summary>
        /// >> NoAccount
        /// The account to alter does not exist.
        /// </summary>
        NoAccount,
        
        /// <summary>
        /// >> NoPermission
        /// The signing account has no permission to do the operation.
        /// </summary>
        NoPermission,
        
        /// <summary>
        /// >> Unknown
        /// The given asset ID is unknown.
        /// </summary>
        Unknown,
        
        /// <summary>
        /// >> Frozen
        /// The origin account is frozen.
        /// </summary>
        Frozen,
        
        /// <summary>
        /// >> InUse
        /// The asset ID is already taken.
        /// </summary>
        InUse,
        
        /// <summary>
        /// >> BadWitness
        /// Invalid witness data given.
        /// </summary>
        BadWitness,
        
        /// <summary>
        /// >> MinBalanceZero
        /// Minimum balance should be non-zero.
        /// </summary>
        MinBalanceZero,
        
        /// <summary>
        /// >> UnavailableConsumer
        /// Unable to increment the consumer reference counters on the account. Either no provider
        /// reference exists to allow a non-zero balance of a non-self-sufficient asset, or one
        /// fewer then the maximum number of consumers has been reached.
        /// </summary>
        UnavailableConsumer,
        
        /// <summary>
        /// >> BadMetadata
        /// Invalid metadata given.
        /// </summary>
        BadMetadata,
        
        /// <summary>
        /// >> Unapproved
        /// No approval exists that would allow the transfer.
        /// </summary>
        Unapproved,
        
        /// <summary>
        /// >> WouldDie
        /// The source account would not survive the transfer and it needs to stay alive.
        /// </summary>
        WouldDie,
        
        /// <summary>
        /// >> AlreadyExists
        /// The asset-account already exists.
        /// </summary>
        AlreadyExists,
        
        /// <summary>
        /// >> NoDeposit
        /// The asset-account doesn't have an associated deposit.
        /// </summary>
        NoDeposit,
        
        /// <summary>
        /// >> WouldBurn
        /// The operation would result in funds being burned.
        /// </summary>
        WouldBurn,
        
        /// <summary>
        /// >> LiveAsset
        /// The asset is a live asset and is actively being used. Usually emit for operations such
        /// as `start_destroy` which require the asset to be in a destroying state.
        /// </summary>
        LiveAsset,
        
        /// <summary>
        /// >> AssetNotLive
        /// The asset is not live, and likely being destroyed.
        /// </summary>
        AssetNotLive,
        
        /// <summary>
        /// >> IncorrectStatus
        /// The asset status is not the expected status.
        /// </summary>
        IncorrectStatus,
        
        /// <summary>
        /// >> NotFrozen
        /// The asset should be frozen before the given operation.
        /// </summary>
        NotFrozen,
        
        /// <summary>
        /// >> CallbackFailed
        /// Callback action resulted in error
        /// </summary>
        CallbackFailed,
    }
}
