//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace AjunaExample.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IBattleMogsStorage interface definition.
    /// </summary>
    public interface IBattleMogsStorage : IStorage
    {
        
        /// <summary>
        /// >> Organizer
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetOrganizer();
        
        /// <summary>
        /// >> AccountConfig
        ///  A map of the current configuration of an account.
        /// </summary>
        AjunaExample.NetApiExt.Generated.Types.Base.Arr10U8 GetAccountConfig(string key);
        
        /// <summary>
        /// >> AccountAchievements
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAchievementState GetAccountAchievements(string key);
        
        /// <summary>
        /// >> Mogwais
        ///  A map of mogwais accessible by the mogwai hash.
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.MogwaiStruct GetMogwais(string key);
        
        /// <summary>
        /// >> MogwaiPrices
        ///  A map of mogwais that are up for sale.
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U128 GetMogwaiPrices(string key);
        
        /// <summary>
        /// >> AllMogwaisCount
        ///  A count over all existing mogwais in the system.
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U64 GetAllMogwaisCount();
        
        /// <summary>
        /// >> Owners
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT3 GetOwners(string key);
        
        /// <summary>
        /// >> OwnedMogwaisCount
        ///  A count over all existing mogwais owned by one account.
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U64 GetOwnedMogwaisCount(string key);
        
        /// <summary>
        /// >> Nonce
        ///  Nonce used for generating a different seed each time.
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U64 GetNonce();
    }
    
    /// <summary>
    /// BattleMogsStorage class definition.
    /// </summary>
    public sealed class BattleMogsStorage : IBattleMogsStorage
    {
        
        /// <summary>
        /// _organizerTypedStorage typed storage field
        /// </summary>
        private TypedStorage<AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> _organizerTypedStorage;
        
        /// <summary>
        /// _accountConfigTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Types.Base.Arr10U8> _accountConfigTypedStorage;
        
        /// <summary>
        /// _accountAchievementsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAchievementState> _accountAchievementsTypedStorage;
        
        /// <summary>
        /// _mogwaisTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.MogwaiStruct> _mogwaisTypedStorage;
        
        /// <summary>
        /// _mogwaiPricesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U128> _mogwaiPricesTypedStorage;
        
        /// <summary>
        /// _allMogwaisCountTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U64> _allMogwaisCountTypedStorage;
        
        /// <summary>
        /// _ownersTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT3> _ownersTypedStorage;
        
        /// <summary>
        /// _ownedMogwaisCountTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64> _ownedMogwaisCountTypedStorage;
        
        /// <summary>
        /// _nonceTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U64> _nonceTypedStorage;
        
        /// <summary>
        /// BattleMogsStorage constructor.
        /// </summary>
        public BattleMogsStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.OrganizerTypedStorage = new TypedStorage<AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>("BattleMogs.Organizer", storageDataProvider, storageChangeDelegates);
            this.AccountConfigTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Types.Base.Arr10U8>("BattleMogs.AccountConfig", storageDataProvider, storageChangeDelegates);
            this.AccountAchievementsTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAchievementState>("BattleMogs.AccountAchievements", storageDataProvider, storageChangeDelegates);
            this.MogwaisTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.MogwaiStruct>("BattleMogs.Mogwais", storageDataProvider, storageChangeDelegates);
            this.MogwaiPricesTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U128>("BattleMogs.MogwaiPrices", storageDataProvider, storageChangeDelegates);
            this.AllMogwaisCountTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U64>("BattleMogs.AllMogwaisCount", storageDataProvider, storageChangeDelegates);
            this.OwnersTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT3>("BattleMogs.Owners", storageDataProvider, storageChangeDelegates);
            this.OwnedMogwaisCountTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64>("BattleMogs.OwnedMogwaisCount", storageDataProvider, storageChangeDelegates);
            this.NonceTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U64>("BattleMogs.Nonce", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _organizerTypedStorage property
        /// </summary>
        public TypedStorage<AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> OrganizerTypedStorage
        {
            get
            {
                return _organizerTypedStorage;
            }
            set
            {
                _organizerTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _accountConfigTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Types.Base.Arr10U8> AccountConfigTypedStorage
        {
            get
            {
                return _accountConfigTypedStorage;
            }
            set
            {
                _accountConfigTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _accountAchievementsTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAchievementState> AccountAchievementsTypedStorage
        {
            get
            {
                return _accountAchievementsTypedStorage;
            }
            set
            {
                _accountAchievementsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _mogwaisTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.MogwaiStruct> MogwaisTypedStorage
        {
            get
            {
                return _mogwaisTypedStorage;
            }
            set
            {
                _mogwaisTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _mogwaiPricesTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U128> MogwaiPricesTypedStorage
        {
            get
            {
                return _mogwaiPricesTypedStorage;
            }
            set
            {
                _mogwaiPricesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _allMogwaisCountTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U64> AllMogwaisCountTypedStorage
        {
            get
            {
                return _allMogwaisCountTypedStorage;
            }
            set
            {
                _allMogwaisCountTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _ownersTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT3> OwnersTypedStorage
        {
            get
            {
                return _ownersTypedStorage;
            }
            set
            {
                _ownersTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _ownedMogwaisCountTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64> OwnedMogwaisCountTypedStorage
        {
            get
            {
                return _ownedMogwaisCountTypedStorage;
            }
            set
            {
                _ownedMogwaisCountTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _nonceTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U64> NonceTypedStorage
        {
            get
            {
                return _nonceTypedStorage;
            }
            set
            {
                _nonceTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Ajuna.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await OrganizerTypedStorage.InitializeAsync("BattleMogs", "Organizer");
            await AccountConfigTypedStorage.InitializeAsync("BattleMogs", "AccountConfig");
            await AccountAchievementsTypedStorage.InitializeAsync("BattleMogs", "AccountAchievements");
            await MogwaisTypedStorage.InitializeAsync("BattleMogs", "Mogwais");
            await MogwaiPricesTypedStorage.InitializeAsync("BattleMogs", "MogwaiPrices");
            await AllMogwaisCountTypedStorage.InitializeAsync("BattleMogs", "AllMogwaisCount");
            await OwnersTypedStorage.InitializeAsync("BattleMogs", "Owners");
            await OwnedMogwaisCountTypedStorage.InitializeAsync("BattleMogs", "OwnedMogwaisCount");
            await NonceTypedStorage.InitializeAsync("BattleMogs", "Nonce");
        }
        
        /// <summary>
        /// Implements any storage change for BattleMogs.Organizer
        /// </summary>
        [StorageChange("BattleMogs", "Organizer")]
        public void OnUpdateOrganizer(string data)
        {
            OrganizerTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Organizer
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetOrganizer()
        {
            return OrganizerTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for BattleMogs.AccountConfig
        /// </summary>
        [StorageChange("BattleMogs", "AccountConfig")]
        public void OnUpdateAccountConfig(string key, string data)
        {
            AccountConfigTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AccountConfig
        ///  A map of the current configuration of an account.
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Types.Base.Arr10U8 GetAccountConfig(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AccountConfigTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Types.Base.Arr10U8 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for BattleMogs.AccountAchievements
        /// </summary>
        [StorageChange("BattleMogs", "AccountAchievements")]
        public void OnUpdateAccountAchievements(string key, string data)
        {
            AccountAchievementsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AccountAchievements
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAchievementState GetAccountAchievements(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AccountAchievementsTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAchievementState result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for BattleMogs.Mogwais
        /// </summary>
        [StorageChange("BattleMogs", "Mogwais")]
        public void OnUpdateMogwais(string key, string data)
        {
            MogwaisTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Mogwais
        ///  A map of mogwais accessible by the mogwai hash.
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.MogwaiStruct GetMogwais(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (MogwaisTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.MogwaiStruct result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for BattleMogs.MogwaiPrices
        /// </summary>
        [StorageChange("BattleMogs", "MogwaiPrices")]
        public void OnUpdateMogwaiPrices(string key, string data)
        {
            MogwaiPricesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> MogwaiPrices
        ///  A map of mogwais that are up for sale.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U128 GetMogwaiPrices(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (MogwaiPricesTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Primitive.U128 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for BattleMogs.AllMogwaisCount
        /// </summary>
        [StorageChange("BattleMogs", "AllMogwaisCount")]
        public void OnUpdateAllMogwaisCount(string data)
        {
            AllMogwaisCountTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> AllMogwaisCount
        ///  A count over all existing mogwais in the system.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U64 GetAllMogwaisCount()
        {
            return AllMogwaisCountTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for BattleMogs.Owners
        /// </summary>
        [StorageChange("BattleMogs", "Owners")]
        public void OnUpdateOwners(string key, string data)
        {
            OwnersTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Owners
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT3 GetOwners(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (OwnersTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT3 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for BattleMogs.OwnedMogwaisCount
        /// </summary>
        [StorageChange("BattleMogs", "OwnedMogwaisCount")]
        public void OnUpdateOwnedMogwaisCount(string key, string data)
        {
            OwnedMogwaisCountTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> OwnedMogwaisCount
        ///  A count over all existing mogwais owned by one account.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U64 GetOwnedMogwaisCount(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (OwnedMogwaisCountTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Primitive.U64 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for BattleMogs.Nonce
        /// </summary>
        [StorageChange("BattleMogs", "Nonce")]
        public void OnUpdateNonce(string data)
        {
            NonceTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Nonce
        ///  Nonce used for generating a different seed each time.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U64 GetNonce()
        {
            return NonceTypedStorage.Get();
        }
    }
}
