//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace AjunaExample.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// INftStakingStorage interface definition.
    /// </summary>
    public interface INftStakingStorage : IStorage
    {
        
        /// <summary>
        /// >> Creator
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetCreator();
        
        /// <summary>
        /// >> GlobalConfigs
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.pallet.GlobalConfig GetGlobalConfigs();
        
        /// <summary>
        /// >> ContractCollectionId
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U32 GetContractCollectionId();
        
        /// <summary>
        /// >> Contracts
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.Contract GetContracts(string key);
        
        /// <summary>
        /// >> ContractsMetadata
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38 GetContractsMetadata(string key);
        
        /// <summary>
        /// >> ContractsAttributes
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21 GetContractsAttributes(string key);
        
        /// <summary>
        /// >> ContractsStats
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.ContractStats GetContractsStats(string key);
        
        /// <summary>
        /// >> ContractAccepted
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U32 GetContractAccepted(string key);
        
        /// <summary>
        /// >> ContractStakedItems
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39 GetContractStakedItems(string key);
        
        /// <summary>
        /// >> ContractIds
        /// </summary>
        AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT40 GetContractIds(string key);
    }
    
    /// <summary>
    /// NftStakingStorage class definition.
    /// </summary>
    public sealed class NftStakingStorage : INftStakingStorage
    {
        
        /// <summary>
        /// _creatorTypedStorage typed storage field
        /// </summary>
        private TypedStorage<AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> _creatorTypedStorage;
        
        /// <summary>
        /// _globalConfigsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.pallet.GlobalConfig> _globalConfigsTypedStorage;
        
        /// <summary>
        /// _contractCollectionIdTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U32> _contractCollectionIdTypedStorage;
        
        /// <summary>
        /// _contractsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.Contract> _contractsTypedStorage;
        
        /// <summary>
        /// _contractsMetadataTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38> _contractsMetadataTypedStorage;
        
        /// <summary>
        /// _contractsAttributesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21> _contractsAttributesTypedStorage;
        
        /// <summary>
        /// _contractsStatsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.ContractStats> _contractsStatsTypedStorage;
        
        /// <summary>
        /// _contractAcceptedTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U32> _contractAcceptedTypedStorage;
        
        /// <summary>
        /// _contractStakedItemsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39> _contractStakedItemsTypedStorage;
        
        /// <summary>
        /// _contractIdsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT40> _contractIdsTypedStorage;
        
        /// <summary>
        /// NftStakingStorage constructor.
        /// </summary>
        public NftStakingStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.CreatorTypedStorage = new TypedStorage<AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>("NftStaking.Creator", storageDataProvider, storageChangeDelegates);
            this.GlobalConfigsTypedStorage = new TypedStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.pallet.GlobalConfig>("NftStaking.GlobalConfigs", storageDataProvider, storageChangeDelegates);
            this.ContractCollectionIdTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U32>("NftStaking.ContractCollectionId", storageDataProvider, storageChangeDelegates);
            this.ContractsTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.Contract>("NftStaking.Contracts", storageDataProvider, storageChangeDelegates);
            this.ContractsMetadataTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38>("NftStaking.ContractsMetadata", storageDataProvider, storageChangeDelegates);
            this.ContractsAttributesTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21>("NftStaking.ContractsAttributes", storageDataProvider, storageChangeDelegates);
            this.ContractsStatsTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.ContractStats>("NftStaking.ContractsStats", storageDataProvider, storageChangeDelegates);
            this.ContractAcceptedTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U32>("NftStaking.ContractAccepted", storageDataProvider, storageChangeDelegates);
            this.ContractStakedItemsTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39>("NftStaking.ContractStakedItems", storageDataProvider, storageChangeDelegates);
            this.ContractIdsTypedStorage = new TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT40>("NftStaking.ContractIds", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _creatorTypedStorage property
        /// </summary>
        public TypedStorage<AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> CreatorTypedStorage
        {
            get
            {
                return _creatorTypedStorage;
            }
            set
            {
                _creatorTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _globalConfigsTypedStorage property
        /// </summary>
        public TypedStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.pallet.GlobalConfig> GlobalConfigsTypedStorage
        {
            get
            {
                return _globalConfigsTypedStorage;
            }
            set
            {
                _globalConfigsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _contractCollectionIdTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U32> ContractCollectionIdTypedStorage
        {
            get
            {
                return _contractCollectionIdTypedStorage;
            }
            set
            {
                _contractCollectionIdTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _contractsTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.Contract> ContractsTypedStorage
        {
            get
            {
                return _contractsTypedStorage;
            }
            set
            {
                _contractsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _contractsMetadataTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38> ContractsMetadataTypedStorage
        {
            get
            {
                return _contractsMetadataTypedStorage;
            }
            set
            {
                _contractsMetadataTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _contractsAttributesTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21> ContractsAttributesTypedStorage
        {
            get
            {
                return _contractsAttributesTypedStorage;
            }
            set
            {
                _contractsAttributesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _contractsStatsTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.ContractStats> ContractsStatsTypedStorage
        {
            get
            {
                return _contractsStatsTypedStorage;
            }
            set
            {
                _contractsStatsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _contractAcceptedTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U32> ContractAcceptedTypedStorage
        {
            get
            {
                return _contractAcceptedTypedStorage;
            }
            set
            {
                _contractAcceptedTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _contractStakedItemsTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39> ContractStakedItemsTypedStorage
        {
            get
            {
                return _contractStakedItemsTypedStorage;
            }
            set
            {
                _contractStakedItemsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _contractIdsTypedStorage property
        /// </summary>
        public TypedMapStorage<AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT40> ContractIdsTypedStorage
        {
            get
            {
                return _contractIdsTypedStorage;
            }
            set
            {
                _contractIdsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Ajuna.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await CreatorTypedStorage.InitializeAsync("NftStaking", "Creator");
            await GlobalConfigsTypedStorage.InitializeAsync("NftStaking", "GlobalConfigs");
            await ContractCollectionIdTypedStorage.InitializeAsync("NftStaking", "ContractCollectionId");
            await ContractsTypedStorage.InitializeAsync("NftStaking", "Contracts");
            await ContractsMetadataTypedStorage.InitializeAsync("NftStaking", "ContractsMetadata");
            await ContractsAttributesTypedStorage.InitializeAsync("NftStaking", "ContractsAttributes");
            await ContractsStatsTypedStorage.InitializeAsync("NftStaking", "ContractsStats");
            await ContractAcceptedTypedStorage.InitializeAsync("NftStaking", "ContractAccepted");
            await ContractStakedItemsTypedStorage.InitializeAsync("NftStaking", "ContractStakedItems");
            await ContractIdsTypedStorage.InitializeAsync("NftStaking", "ContractIds");
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.Creator
        /// </summary>
        [StorageChange("NftStaking", "Creator")]
        public void OnUpdateCreator(string data)
        {
            CreatorTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Creator
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetCreator()
        {
            return CreatorTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.GlobalConfigs
        /// </summary>
        [StorageChange("NftStaking", "GlobalConfigs")]
        public void OnUpdateGlobalConfigs(string data)
        {
            GlobalConfigsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> GlobalConfigs
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.pallet.GlobalConfig GetGlobalConfigs()
        {
            return GlobalConfigsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.ContractCollectionId
        /// </summary>
        [StorageChange("NftStaking", "ContractCollectionId")]
        public void OnUpdateContractCollectionId(string data)
        {
            ContractCollectionIdTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> ContractCollectionId
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U32 GetContractCollectionId()
        {
            return ContractCollectionIdTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.Contracts
        /// </summary>
        [StorageChange("NftStaking", "Contracts")]
        public void OnUpdateContracts(string key, string data)
        {
            ContractsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Contracts
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.Contract GetContracts(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ContractsTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.Contract result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.ContractsMetadata
        /// </summary>
        [StorageChange("NftStaking", "ContractsMetadata")]
        public void OnUpdateContractsMetadata(string key, string data)
        {
            ContractsMetadataTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ContractsMetadata
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38 GetContractsMetadata(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ContractsMetadataTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.ContractsAttributes
        /// </summary>
        [StorageChange("NftStaking", "ContractsAttributes")]
        public void OnUpdateContractsAttributes(string key, string data)
        {
            ContractsAttributesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ContractsAttributes
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21 GetContractsAttributes(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ContractsAttributesTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.ContractsStats
        /// </summary>
        [StorageChange("NftStaking", "ContractsStats")]
        public void OnUpdateContractsStats(string key, string data)
        {
            ContractsStatsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ContractsStats
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.ContractStats GetContractsStats(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ContractsStatsTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts.ContractStats result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.ContractAccepted
        /// </summary>
        [StorageChange("NftStaking", "ContractAccepted")]
        public void OnUpdateContractAccepted(string key, string data)
        {
            ContractAcceptedTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ContractAccepted
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U32 GetContractAccepted(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ContractAcceptedTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.ContractStakedItems
        /// </summary>
        [StorageChange("NftStaking", "ContractStakedItems")]
        public void OnUpdateContractStakedItems(string key, string data)
        {
            ContractStakedItemsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ContractStakedItems
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39 GetContractStakedItems(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ContractStakedItemsTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for NftStaking.ContractIds
        /// </summary>
        [StorageChange("NftStaking", "ContractIds")]
        public void OnUpdateContractIds(string key, string data)
        {
            ContractIdsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ContractIds
        /// </summary>
        public AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT40 GetContractIds(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ContractIdsTypedStorage.Dictionary.TryGetValue(key, out AjunaExample.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT40 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
